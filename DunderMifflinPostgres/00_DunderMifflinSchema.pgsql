SET client_min_messages = WARNING;
CREATE SCHEMA IF NOT EXISTS dunder_mifflin;
SET search_path = dunder_mifflin, public;

CREATE TABLE IF NOT EXISTS Categories (
  CategoryID      integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  CategoryName    varchar(50) NOT NULL,
  Description     varchar(500),
  Picture         varchar(1)
);

CREATE TABLE IF NOT EXISTS Customers (
  CustomerID      integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  CustomerCode    varchar(5) NOT NULL,
  CompanyName     varchar(200) NOT NULL,
  ContactName     varchar(100),
  ContactTitle    varchar(100),
  Address         varchar(100),
  City            varchar(100),
  Region          varchar(50),
  PostalCode      varchar(50),
  Country         varchar(50),
  Phone           varchar(50)
);

CREATE TABLE IF NOT EXISTS EmployeeStatus (
  StatusID        integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  StatusCode      varchar(10) NOT NULL UNIQUE,
  StatusName      varchar(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS Employees (
  EmployeeID      integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  LastName        varchar(100) NOT NULL,
  FirstName       varchar(100) NOT NULL,
  MiddleName      varchar(100),
  Title           varchar(50),
  TitleOfCourtesy varchar(20),
  BirthDate       date,
  HireDate        date,
  TerminationDate date,
  RehireDate      date,
  Address         varchar(100),
  City            varchar(100),
  Region          varchar(100),
  PostalCode      varchar(100),
  Country         varchar(50),
  HomePhone       varchar(100),
  Extension       varchar(10),
  Notes           varchar,
  ReportsTo       integer REFERENCES Employees(EmployeeID) ON UPDATE CASCADE ON DELETE SET NULL,
  PhotoPath       varchar,
  StatusCode      varchar(10) REFERENCES EmployeeStatus(StatusCode) ON UPDATE CASCADE ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS Regions (
  RegionID        integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  RegionName      varchar(100) NOT NULL,
  IsActive        boolean NOT NULL DEFAULT true
);

CREATE TABLE IF NOT EXISTS Shippers (
  ShipperID       integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  CompanyName     varchar(40) NOT NULL,
  Phone           varchar(24)
);

CREATE TABLE IF NOT EXISTS Orders (
  OrderID         integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  CustomerID      integer REFERENCES Customers(CustomerID) ON UPDATE CASCADE ON DELETE SET NULL,
  EmployeeID      integer REFERENCES Employees(EmployeeID) ON UPDATE CASCADE ON DELETE SET NULL,
  OrderDate       date,
  RequiredDate    date,
  ShippedDate     date,
  ShipVia         integer REFERENCES Shippers(ShipperID) ON UPDATE CASCADE ON DELETE SET NULL,
  Freight         numeric(12,2),
  ShipName        varchar(200),
  ShipAddress     varchar(200),
  ShipCity        varchar(100),
  ShipRegion      varchar(100),
  ShipPostalCode  varchar(50),
  ShipCountry     varchar(50)
);

CREATE TABLE IF NOT EXISTS Suppliers (
  SupplierID      integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  CompanyName     varchar(50) NOT NULL,
  ContactName     varchar(50),
  ContactTitle    varchar(50),
  Address         varchar(60),
  City            varchar(50),
  Region          varchar(50),
  PostalCode      varchar(50),
  Country         varchar(50),
  Phone           varchar(50),
  Fax             varchar(50),
  HomePage        varchar(1000)
);

CREATE TABLE IF NOT EXISTS Products (
  ProductID           integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  ProductName         varchar(100) NOT NULL,
  ProductDescription  varchar,
  SupplierID          integer REFERENCES Suppliers(SupplierID) ON UPDATE CASCADE ON DELETE SET NULL,
  CategoryID          integer REFERENCES Categories(CategoryID) ON UPDATE CASCADE ON DELETE SET NULL,
  QuantityPerUnit     varchar(50),
  UnitPrice           numeric(10,2),
  UnitsInStock        integer,
  UnitsOnOrder        integer,
  ReorderLevel        integer,
  Discontinued        boolean NOT NULL DEFAULT false
);

CREATE TABLE IF NOT EXISTS OrderDetails (
  OrderID         integer NOT NULL REFERENCES Orders(OrderID)     ON UPDATE CASCADE ON DELETE CASCADE,
  ProductID       integer NOT NULL REFERENCES Products(ProductID) ON UPDATE CASCADE ON DELETE RESTRICT,
  UnitPrice       numeric(10,2) NOT NULL,
  Quantity        integer NOT NULL,
  Discount        numeric(4,3) NOT NULL DEFAULT 0.000, -- fraction (e.g., 0.15)
  LineTotal       numeric(10,2),
  PRIMARY KEY (OrderID, ProductID)
);

-- Practical indexes (Postgres will auto-index PK/UNIQUE) . :contentReference[oaicite:3]{index=3}
CREATE INDEX IF NOT EXISTS idx_orders_customer   ON Orders(CustomerID);
CREATE INDEX IF NOT EXISTS idx_orders_employee   ON Orders(EmployeeID);
CREATE INDEX IF NOT EXISTS idx_orders_dates      ON Orders(OrderDate, ShippedDate);
CREATE INDEX IF NOT EXISTS idx_orderdetails_prod ON OrderDetails(ProductID);
CREATE INDEX IF NOT EXISTS idx_products_cat      ON Products(CategoryID);
CREATE INDEX IF NOT EXISTS idx_products_supp     ON Products(SupplierID);
